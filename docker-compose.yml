version: "3"
services:
  krakend_ee:
    # The :watch image restarts the service automatically when the configuration files change.
    # Do not use this image in production, it's meant to speed up your testing and development.
    image: krakend/krakend-ee:2.3-watch
    volumes:
      - ./config/krakend:/etc/krakend
      - ./dumps:/tmp/krakend-http-logger
      - ./images/grpc/defs:/etc/krakend/grpc_catalog
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    command: ["run", "-d", "-c", "krakend.json", "--accept-eula"]
    depends_on:
      - fake_api
      - jaeger
  grafana:
    image: grafana/grafana:9.1.2
    ports:
      - "4000:3000"
    volumes:
      - "./config/telemetry/grafana/datasources/all.yml:/etc/grafana/provisioning/datasources/all.yml"
      - "./config/telemetry/grafana/dashboards/all.yml:/etc/grafana/provisioning/dashboards/all.yml"
      - "./config/telemetry/grafana/krakend:/var/lib/grafana/dashboards/krakend"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # The token below must match the one in influxdb
      - INFLUXDB_TOKEN=my-super-secret-auth-token
  influxdb:
  #  image: influxdb:1.8.10
  #  environment:
  #    - "INFLUXDB_DB=krakend"
  #    - "INFLUXDB_USER=krakend-dev"
  #    - "INFLUXDB_USER_PASSWORD=pas5w0rd"
  #    - "INFLUXDB_ADMIN_USER=admin"
  #    - "INFLUXDB_ADMIN_PASSWORD=supersecretpassword"
    image: influxdb:2.4
    environment:
      - "DOCKER_INFLUXDB_INIT_MODE=setup"
      - "DOCKER_INFLUXDB_INIT_USERNAME=krakend-dev"
      - "DOCKER_INFLUXDB_INIT_PASSWORD=pas5w0rd"
      - "DOCKER_INFLUXDB_INIT_ORG=my-org"
      - "DOCKER_INFLUXDB_INIT_BUCKET=krakend"
      - "DOCKER_INFLUXDB_INIT_RETENTION=1w"
      - "DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token"
    ports:
      - "8086:8086"
    volumes:
      - "./config/telemetry/influx:/docker-entrypoint-initdb.d"
  jaeger:
    image: jaegertracing/all-in-one:1
    ports:
      - "16686:16686"
      - "14268:14268"
  elasticsearch:
    image: elasticsearch:8.4.1
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "xpack.security.transport.ssl.enabled=false"
      - "xpack.security.http.ssl.enabled=false"
    ports:
      - "19200:9200"
      - "9300:9300"
  kibana:
    image: kibana:8.4.1
    ports:
      - "5601:5601"
  logstash:
    image: logstash:8.4.1
    ports:
      - "12201:12201/udp"
      - "5044:5044"
    environment:
      - "xpack.monitoring.elasticsearch.url=http://elasticsearch:9200"
    volumes:
      - ./config/telemetry/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: ["-f", "/usr/share/logstash/pipeline/logstash.conf"]
  rabbitmq:
    image: rabbitmq:3-management
    # Login with guest/guest
    ports:
      - "15672:15672"
  fake_api:
    image: nginx:1.23.4-alpine
    volumes:
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./data:/usr/share/nginx/html
    ports:
      - "8000:8080"
  web:
    build:
      context: images/spa-auth-web
    ports:
      - "3000:3000"
  jwt_revoke:
    build:
      context: images/jwt-revoker
    ports:
      - "9000:8080"
    depends_on:
      - krakend_ee
    restart: always
  grpc_flights:
    image: krakend/grpc_flights_fake:latest
    ports:
      - "4242:4242"
  grpc_trains:
    image: krakend/grpc_trains_fake:latest
    ports:
      - "4243:4243"

