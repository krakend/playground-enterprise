{"pageProps":{"useCases":{"API composition":[{"@comment":"Feature: Aggregation and basic transformation","endpoint":"/git/{user}","backend":[{"host":["https://api.github.com"],"url_pattern":"/users/{user}","allow":["avatar_url","name","company","blog","location","mail","hireable","followers","public_repos","public_gists"],"mapping":{"blog":"website"},"group":"user"},{"host":["https://api.github.com"],"url_pattern":"/users/{user}/repos","mapping":{"collection":"repos"},"is_collection":true}],"extra_config":{"documentation/openapi":{"summary":"Merges two calls from github and serves under a single endpoint","description":"This endpoint fetches in parallel the user information and the repository information from Githuib and returns it together. Non interesting fields are removed.","tags":["API composition"]}},"custom_fields":{"tag":"Feature","name":"Aggregation and basic transformation","slug":"git-user","category":"API composition"}},{"@comment":"Feature: Sequential calls, using values from 1st call response into 2nd call request","endpoint":"/sequential","extra_config":{"proxy":{"sequential":true},"documentation/openapi":{"summary":"Get crypto market information with 3 concurrent calls","description":"This endpoint fetches crypto market information from Coingecko using 3 concurrent calls. Returns the fastest successful response and discards the rest","tags":["API composition"]}},"backend":[{"host":["http://fake_api"],"url_pattern":"/hotels/1.json","allow":["destination_id"]},{"host":["http://fake_api"],"url_pattern":"/destinations/{resp0_destination_id}.json"}],"custom_fields":{"tag":"Feature","name":"Sequential calls, using values from 1st call response into 2nd call request","slug":"sequential","category":"API composition"}}],"Content Manipulation":[{"@comment":"EE only feature: Advanced transformation with query language","endpoint":"/cryptos/{currency}","output_encoding":"json-collection","backend":[{"host":["https://api.coingecko.com"],"url_pattern":"/api/v3/coins/markets?vs_currency={currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false","encoding":"safejson"}],"extra_config":{"modifier/jmespath":{"@comment":"Get first 5 crypto by market capitalization, then reverse sort them by name, finally filter and rename some fields","expr":"reverse(sort_by(collection[:5], &name))[*].{name: name, token: symbol,price: current_price, price_change: price_change_percentage_24h, market_cap: market_cap}"},"documentation/openapi":{"summary":"Get TOP 5 crypto capitalization & price data for a given currency","description":"This endpoint fetches some crypto capitalization data from Coingecko for a given currency.","tags":["Content Manipulation"]}},"custom_fields":{"tag":"EE only feature","name":"Advanced transformation with query language","slug":"cryptos-currency","category":"Content Manipulation"}},{"@comment":"Feature: Regular expression manipulation","endpoint":"/user/creditcard","backend":[{"host":["http://fake_api"],"url_pattern":"/user/1.json","allow":["credit_card"],"extra_config":{"modifier/response-body":{"modifiers":[{"regexp":{"field":"credit_card.number","@comment":"Ridiculous card masking. Show last 4 digits and remove the rest. Credit card number is nested.","find":"^.*(\\d{4})","replace":"XXXX-${1}"}}]}}}],"extra_config":{"documentation/openapi":{"summary":"Mask the credit card number","description":"This endpoint fetches the user information and masks the credit card number","tags":["Content Manipulation"]}},"custom_fields":{"tag":"Feature","name":"Regular expression manipulation","slug":"user-creditcard","category":"Content Manipulation"}},{"@comment":"Feature: Mocked response","endpoint":"/mocked-response","method":"GET","output_encoding":"json","backend":[{"host":["http://unexistent_backend"],"url_pattern":"/"}],"extra_config":{"proxy":{"static":{"data":{"an_integer":123,"an_array":["arr1","arr2"],"an_object":{"obj":"obj1"}},"strategy":"always"}},"documentation/openapi":{"summary":"Mocked response","description":"This endpoint returns a mocked response when the backend is not available","tags":["Content Manipulation"]}},"custom_fields":{"tag":"Feature","name":"Mocked response","slug":"mocked-response","category":"Content Manipulation"}}],"Security Policies":[{"@comment":"Feature: Security policy engine for requests, responses and claim checking","endpoint":"/track-user","@test_with":"curl -iG -H'Cookie: GDPR=yes' 'http://localhost:8080/track-user'","input_headers":["Cookie"],"backend":[{"host":["http://localhost:8080"],"url_pattern":"/__debug/cookie"}],"extra_config":{"security/policies":{"req":{"policies":["getCookie('GDPR') == 'yes'"],"error":{"body":"User did not accept the cookie and tracking is not allowed","status":403}}},"documentation/openapi":{"summary":"Tracks user activity when the GDPR cookie is accepted","description":"Example on how to abort a request based on a security policy. If the user does not have the GDPR cookie set to 'yes', the request will be aborted.","tags":["Security Policies"]}},"custom_fields":{"tag":"Feature","name":"Security policy engine for requests, responses and claim checking","slug":"track-user","category":"Security Policies"}}],"Throttling and Acceleration":[{"@comment":"Feature: Two types of rate limiting on aggregated content","endpoint":"/shop","backend":[{"host":["http://fake_api"],"url_pattern":"/shop/campaigns.json","allow":["campaigns"]},{"host":["http://fake_api"],"url_pattern":"/shop/products.json","allow":["products"],"extra_config":{"qos/ratelimit/proxy":{"max_rate":1,"capacity":1}}}],"extra_config":{"qos/ratelimit/router":{"max_rate":2},"documentation/openapi":{"summary":"Aggregates campaigns and products from the shop using different ratelimits","description":"This endpoint fetches the campaigns and products from the shop. The campaigns are fetched without ratelimit, but the products are fetched with a rate limit of 1 request per second. The endpoint itself has a rate limit of 2 requests per second.","tags":["Throttling and Acceleration"]}},"custom_fields":{"tag":"Feature","name":"Two types of rate limiting on aggregated content","slug":"shop","category":"Throttling and Acceleration"}},{"@comment":"Feature: Backend cache","endpoint":"/market/cached","extra_config":{"documentation/openapi":{"summary":"Local cache for the crypto market information","description":"This endpoint caches the responses from the Coingecko API for the time returned in the Cache-Control header.","tags":["Throttling and Acceleration"]}},"backend":[{"host":["https://api.coingecko.com"],"url_pattern":"/api/v3/coins/markets?vs_currency=eur&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false","encoding":"safejson","mapping":{"collection":"coins"},"extra_config":{"qos/http-cache":{"shared":true}}}],"custom_fields":{"tag":"Feature","name":"Backend cache","slug":"market-cached","category":"Throttling and Acceleration"}},{"@comment":"Feature: Concurrent calls - Initial example with no concurrent calls enabled (normal)","endpoint":"/market/simple","backend":[{"host":["https://api.coingecko.com"],"url_pattern":"/api/v3/coins/markets?vs_currency=eur&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false","encoding":"safejson","mapping":{"collection":"coins"}}],"extra_config":{"documentation/openapi":{"summary":"Simple fetch of external data without concurrent calls enabled","description":"This endpoint fetches crypto market information from Coingecko using a single non-concurrent call.","tags":["Throttling and Acceleration"]}},"custom_fields":{"tag":"Feature","name":"Concurrent calls - Initial example with no concurrent calls enabled (normal)","slug":"market-simple","category":"Throttling and Acceleration"}},{"@comment":"Feature: Concurrent calls - Example with concurrent calls enabled (more speed, less errors)","endpoint":"/market/concurrent","concurrent_calls":3,"backend":[{"host":["https://api.coingecko.com"],"url_pattern":"/api/v3/coins/markets?vs_currency=eur&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false","encoding":"safejson","mapping":{"collection":"coins"}}],"extra_config":{"documentation/openapi":{"summary":"Get crypto market information with 3 concurrent calls","description":"This endpoint fetches crypto market information from Coingecko using 3 concurrent calls. Returns the fastest successful response and discards the rest","tags":["Throttling and Acceleration"]}},"custom_fields":{"tag":"Feature","name":"Concurrent calls - Example with concurrent calls enabled (more speed, less errors)","slug":"market-concurrent","category":"Throttling and Acceleration"}}],"Non-REST Connectivity":[{"@comment":"Feature: GraphQL to REST","endpoint":"/starwars_films/{movie_id}","extra_config":{"documentation/openapi":{"summary":"Connect to a GraphQL server and fetch the film information","description":"This endpoint connects to a GraphQL server and offers the interaction as a regular REST endpoint.","tags":["Non-REST Connectivity"]}},"backend":[{"host":["https://swapi-graphql.netlify.app/"],"url_pattern":"/.netlify/functions/index","target":"data.film","extra_config":{"backend/graphql":{"type":"query","query":"query Query ($movie_id: ID!) {\nfilm (filmID: $movie_id) {\nid\nepisodeID\ntitle\ndirector\nreleaseDate\nspeciesConnection {\nspecies {\nname\nclassification\nhomeworld {\nname\n}\n}\n}\n}\n}","variables":{"movie_id":"{movie_id}"}}}}],"custom_fields":{"tag":"Feature","name":"GraphQL to REST","slug":"starwars-films-movie-id","category":"Non-REST Connectivity"}},{"@comment":"Feature: Expose a GET REST endpoint from POST to SOAP service","endpoint":"/capital-of/{country}","extra_config":{"documentation/openapi":{"summary":"Interact with a SOAP server as a regular REST API","description":"This endpoint interacts with a SOAP server but offers a pure REST interface to the consumer","tags":["Non-REST Connectivity"]}},"backend":[{"host":["http://webservices.oorsprong.org"],"url_pattern":"/websamples.countryinfo/CountryInfoService.wso","encoding":"xml","method":"POST","target":"Envelope.Body.CapitalCityResponse","mapping":{"CapitalCityResult":"capital"},"deny":["-m"],"extra_config":{"backend/soap":{"@comment":"The XML template with variables is in the following path:","path":"./extended/templates/soap_request_capital_city.tmpl.xml"}}}],"custom_fields":{"tag":"Feature","name":"Expose a GET REST endpoint from POST to SOAP service","slug":"capital-of-country","category":"Non-REST Connectivity"}},{"@comment":"EE only feature: GRPC","endpoint":"/travel","extra_config":{"documentation/openapi":{"summary":"Find flights, trains and hotels","description":"This endpoint fetches flights, trains and hotels information from different backends","tags":["Non-REST Connectivity"]}},"input_query_strings":["lat","lon"],"backend":[{"host":["grpc_flights:4242"],"group":"flights","url_pattern":"/flight_finder.Flights/FindFlight","extra_config":{"backend/grpc":{"input_mapping":{"lat":"where.latitude","lon":"where.longitude"}}}},{"host":["grpc_trains:4243"],"group":"trains","url_pattern":"/train_finder.Trains/FindTrains","extra_config":{"backend/grpc":{"input_mapping":{"lat":"origin.position.latitude","lon":"origin.position.longitude"},"response_naming_convention":"camelCase","output_enum_as_string":true,"output_timestamp_as_string":true,"output_duration_as_string":true,"client_tls":{"allow_insecure_connections":true}}}},{"group":"hotels","url_pattern":"/hotels/1.json"},{"host":["grpc_trains:4243"],"group":"trains_classes","url_pattern":"/train_finder.Trains/GetTrainClasses","extra_config":{"backend/grpc":{"response_naming_convention":"camelCase","output_remove_unset_values":true,"client_tls":{"allow_insecure_connections":true}}}}],"custom_fields":{"tag":"EE only feature","name":"GRPC","slug":"travel","category":"Non-REST Connectivity"}},{"@comment":"EE only feature: GRPC Payload in Body","endpoint":"/travel_book_flight/{id_flight}/{main_passenger}","extra_config":{"documentation/openapi":{"summary":"Book a flight","description":"This endpoint books a flight using a GRPC backend","tags":["Non-REST Connectivity"]}},"method":"POST","backend":[{"host":["grpc_flights:4242"],"group":"flights","url_pattern":"/flight_finder.Flights/BookFlight","extra_config":{"backend/grpc":{"input_mapping":{"Id_flight":"flight_id","Main_passenger":"main_passenger.full_name"},"use_request_body":true}}}],"custom_fields":{"tag":"EE only feature","name":"GRPC Payload in Body","slug":"travel-book-flight-id-flight-main-passenger","category":"Non-REST Connectivity"}},{"@comment":"EE only feature: WebSockets (chat example)","endpoint":"/chat/ws/{room}","input_query_strings":["*"],"input_headers":["*"],"backend":[{"url_pattern":"/ws/{room}","disable_host_sanitize":true,"host":["ws://chat:8888"]}],"extra_config":{"websocket":{"input_headers":["Cookie","Authorization"],"connect_event":true,"disconnect_event":true,"read_buffer_size":4096,"write_buffer_size":4096,"message_buffer_size":4096,"max_message_size":3200000,"write_wait":"10s","pong_wait":"60s","ping_period":"54s","max_retries":0,"backoff_strategy":"exponential"},"documentation/openapi":{"summary":"Chat room using WebSockets","description":"This endpoint connects to a chat server using WebSockets","tags":["Non-REST Connectivity"]}},"custom_fields":{"tag":"EE only feature","name":"WebSockets (chat example)","slug":"chat-ws-room","category":"Non-REST Connectivity"}},{"@comment":"EE only feature: WebSockets (chat example web interface)","endpoint":"/chat","extra_config":{"documentation/openapi":{"summary":"Chat room User Interface","description":"This endpoint offers a web interface to present a chat room","tags":["Non-REST Connectivity"]}},"output_encoding":"no-op","backend":[{"url_pattern":"/","host":["http://chat:8888"],"encoding":"no-op"}],"custom_fields":{"tag":"EE only feature","name":"WebSockets (chat example web interface)","slug":"chat","category":"Non-REST Connectivity"}},{"@comment":"EE only feature: Web Server - Static content","endpoint":"/demo/*","output_encoding":"no-op","backend":[{"url_pattern":"/","extra_config":{"backend/static-filesystem":{"directory_listing":false,"path":"./demo/"}},"host":["http://localhost:8080"],"encoding":"no-op"}],"extra_config":{"documentation/openapi":{"summary":"Serve static content","description":"This endpoint serves static content from the demo folder","tags":["Non-REST Connectivity"]}},"custom_fields":{"tag":"EE only feature","name":"Web Server - Static content","slug":"demo","category":"Non-REST Connectivity"}}],"Routing":[{"@comment":"EE only feature: Wildcard to our fake API, open","endpoint":"/fake-api/*","backend":[{"host":["http://fake_api"],"url_pattern":"/"}],"extra_config":{"documentation/openapi":{"summary":"Calls to internal service with wildcard","description":"This endpoint will send all requests to a designed backend including everything after the /fake-api path","tags":["Routing"]}},"custom_fields":{"tag":"EE only feature","name":"Wildcard to our fake API, open","slug":"fake-api","category":"Routing"}},{"@comment":"EE only feature: Wildcard to our fake API, protected with Basic Auth","endpoint":"/fake-api-auth/*","@test_with":"curl -iG 'http://admin:admin@localhost:8080/fake-api-auth/articles.json'","output_encoding":"no-op","backend":[{"host":["http://fake_api"],"url_pattern":"/"}],"extra_config":{"@comment":"The simple inclusion of the Auth Basic component enables it for this endpoint","auth/basic":{},"documentation/openapi":{"summary":"Calls to internal service with wildcard, adding auth","description":"This endpoint will send all requests to a designed backend including everything after the /fake-api-auth path, adding Basic Authentication","tags":["Routing"]}},"custom_fields":{"tag":"EE only feature","name":"Wildcard to our fake API, protected with Basic Auth","slug":"fake-api-auth","category":"Routing"}},{"@comment":"EE only feature: Wildcard with geofencing - Allow visits only from Spain","endpoint":"/fake-api-geofence/*","input_headers":["X-Geoip"],"backend":[{"host":["http://fake_api"],"url_pattern":"/"}],"extra_config":{"validation/cel":[{"check_expr":"req_headers['X-Geoip'][0].matches('\"IsoCode\":\"ES\"')"}],"documentation/openapi":{"summary":"Calls to internal service with wildcard, using geofencing","description":"This endpoint will send all requests to a designed backend including everything after the /fake-api-geofence path, adding geofencing (allowing calls only from Spain)","tags":["Routing"]}},"custom_fields":{"tag":"EE only feature","name":"Wildcard with geofencing - Allow visits only from Spain","slug":"fake-api-geofence","category":"Routing"}},{"@comment":"EE only feature: Dynamic routing based on headers (token claim and cookie also available)","endpoint":"/dynamic/header","extra_config":{"documentation/openapi":{"summary":"Calls to internal service with wildcard, using geofencing","description":"This endpoint will send all requests to a designed backend including everything after the /fake-api-geofence path, adding geofencing (allowing calls only from Spain)","tags":["Routing"]}},"backend":[{"@comment":"We will route to the backend using the content of the 'X-Route' header","@test_with":"curl -iG -H 'X-Route: hello' 'http://localhost:8080/dynamic/header'","url_pattern":"/__debug/{input_headers.x-route}"}],"custom_fields":{"tag":"EE only feature","name":"Dynamic routing based on headers (token claim and cookie also available)","slug":"dynamic-header","category":"Routing"}},{"@comment":"EE only feature: Dynamic routing based on query strings","endpoint":"/dynamic/qs","extra_config":{"documentation/openapi":{"summary":"Route to the backend using the content of the 'X-Route' header","description":"You can test this routing with the command curl -iG 'http://localhost:8080/dynamic/qs?route=hello'","tags":["Routing"]}},"backend":[{"url_pattern":"/__debug/{input_query_strings.route}"}],"custom_fields":{"tag":"EE only feature","name":"Dynamic routing based on query strings","slug":"dynamic-qs","category":"Routing"}},{"@comment":"Feature: Only POST method allowed","endpoint":"/post","method":"POST","backend":[{"url_pattern":"/__debug/post"}],"extra_config":{"documentation/openapi":{"summary":"Only POST method allowed","description":"This endpoint only allows POST requests","tags":["Routing"]}},"custom_fields":{"tag":"Feature","name":"Only POST method allowed","slug":"post","category":"Routing"}}],"Authentication":[{"@comment":"Feature: A public endpoint that requires no authentication","endpoint":"/public","extra_config":{"documentation/openapi":{"summary":"Public endpoint","description":"This endpoint is public and requires no authentication","tags":["Authentication"]}},"backend":[{"host":["http://fake_api"],"url_pattern":"/hotels/1.json"}],"custom_fields":{"tag":"Feature","name":"A public endpoint that requires no authentication","slug":"public","category":"Authentication"}},{"@comment":"Feature: Authorization based on JWT (using Auth0)","endpoint":"/private/auth0","backend":[{"host":["http://fake_api"],"url_pattern":"/user/1.json"}],"extra_config":{"auth/validator":{"alg":"RS256","audience":["http://api.example.com"],"roles_key":"http://api.example.com/custom/roles","roles":["user","admin"],"jwk_url":"https://albert-test.auth0.com/.well-known/jwks.json"},"documentation/openapi":{"summary":"Some information behind JWT authentication protection (Auth0)","description":"This endpoint uses JWT authentication with Auth0","tags":["Authentication"]}},"custom_fields":{"tag":"Feature","name":"Authorization based on JWT (using Auth0)","slug":"private-auth0","category":"Authentication"}},{"@comment":"Feature: Authorization based on JWT (using KrakenD JOSE signer)","endpoint":"/private/custom","backend":[{"host":["http://fake_api"],"url_pattern":"/user/1.json"}],"extra_config":{"auth/validator":{"alg":"HS256","audience":["http://api.example.com"],"roles_key":"roles","issuer":"https://krakend.io","roles":["role_a","role_c"],"jwk_local_path":"/opt/krakend/jwk-symmetric.json","disable_jwk_security":true},"documentation/openapi":{"summary":"Sign a token cryptographically (KrakenD JOSE signer)","description":"This endpoint uses the KrakenD JOSE signer to sign plain tokens coming from the backend and helpiong you to adopt cryptography easily","tags":["Authentication"]}},"custom_fields":{"tag":"Feature","name":"Authorization based on JWT (using KrakenD JOSE signer)","slug":"private-custom","category":"Authentication"}},{"@comment":"Feature: JWT signing, as described at https://www.krakend.io/docs/authorization/jwt-signing/","endpoint":"/token","backend":[{"host":["http://fake_api"],"url_pattern":"/token.json"}],"extra_config":{"documentation/openapi":{"description":"This endpoint uses JWT signing","summary":"Some information behind JWT signing","tags":["Authentication"]},"auth/signer":{"alg":"HS256","kid":"sim2","keys_to_sign":["access_token","refresh_token"],"jwk_local_path":"/opt/krakend/jwk-symmetric.json","disable_jwk_security":true}},"custom_fields":{"tag":"Feature","name":"JWT signing, as described at https","slug":"token","category":"Authentication"}},{"@comment":"EE only feature: Authorization based on API Keys","endpoint":"/api-key","backend":[{"url_pattern":"/__debug/admin","host":["http://localhost:8080"]}],"extra_config":{"auth/api-keys":{"roles":["admin"]},"documentation/openapi":{"summary":"Some information behind API-Keys authentication protection","description":"This endpoint uses API-Key authentication","tags":["Authentication"]}},"custom_fields":{"tag":"EE only feature","name":"Authorization based on API Keys","slug":"api-key","category":"Authentication"}}]}},"__N_SSG":true}