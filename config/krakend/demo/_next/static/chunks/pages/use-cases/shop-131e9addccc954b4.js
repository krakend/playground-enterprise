(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4155],{7645:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/use-cases/shop",function(){return t(5465)}])},5465:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return c}});var s=t(5893),i=t(1644),o=t(6654);let r=function(e){let{children:n}=e;return(0,s.jsx)(o.Z,{children:n})};function l(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{children:"Endpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"/shop\n"})}),"\n",(0,s.jsx)(n.h2,{children:"Stateless rate limiting"}),"\n",(0,s.jsx)(n.p,{children:"This use case demonstrates two different types of stateless rate limiting while doing API composition:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"qos/ratelimit/proxy"})," limits the interaction between the gateway and the backend at 1 request per second"]}),"\n",(0,s.jsxs)(n.li,{children:["The  ",(0,s.jsx)(n.code,{children:"qos/ratelimit/router"})," limits the interaction between the user and the gateway at 2 requests per second"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["As you can see, the configuration has two backends, and one has no limitation ",(0,s.jsx)(n.code,{children:"qos/ratelimit/proxy"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Now, if you call this endpoint more than 1-2 times per second, you will start to see the limitations."}),"\n",(0,s.jsx)(n.h3,{children:"Rate limit exceeded"}),"\n",(0,s.jsxs)(n.p,{children:["If you call the ",(0,s.jsx)(n.code,{children:"/shop"})," endpoint more than 2 times within one second you will get an error status code and no response:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curl -i http://localhost:8080/shop\n"})}),"\n",(0,s.jsx)(n.h3,{children:"Partially rate-limited"}),"\n",(0,s.jsxs)(n.p,{children:["If you call the endpoint quickly enough not to pass the 2 requests per second but surpass 1 request per second, then you will have a partial response containing the backend that is not a rate limit at the proxy level. So the response contains ",(0,s.jsx)(n.code,{children:"campaigns"})," but it does not have ",(0,s.jsx)(n.code,{children:"products"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To see all types of rate limiting, see the ",(0,s.jsx)(n.a,{href:"https://www.krakend.io/docs/enterprise/throttling/",children:"Throttling documentation"})]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})})}}},function(e){e.O(0,[2675,182,8535,4544,2888,9774,179],function(){return e(e.s=7645)}),_N_E=e.O()}]);