{
    "@comment": "Feature: A public endpoint that requires no authentication",
    "endpoint": "/public",
    "backend": [
        {
            "host": ["http://fake_api"],
            "url_pattern": "/hotels/1.json"
        }
    ]
},
{
    "@comment": "Feature: Authorization based on JWT (using Auth0)",
    "endpoint": "/private/auth0",
    "backend": [
        {
            "host": ["http://fake_api"],
            "url_pattern": "/user/1.json"
        }
    ],
    "extra_config": {
        "auth/validator": {
            "alg": "RS256",
            "audience": [
                "http://api.example.com"
            ],
            "roles_key": "http://api.example.com/custom/roles",
            "roles": [
                "user",
                "admin"
            ],
            "jwk_url": "https://albert-test.auth0.com/.well-known/jwks.json"
        },
        "documentation/openapi": {
            "summary": "Some information behind JWT authentication protection (Auth0)",
            "description": "This endpoint uses JWT authentication with Auth0",
            "tags": [
                "Authentication"
            ]
        }
    }
},
{
    "@comment": "Feature: Security policy engine for requests, responses and claim checking",
    "endpoint": "/track-user",
    "@test_with": "curl -iG -H'Cookie: GDPR=yes' 'http://localhost:8080/track-user'",
    "input_headers": [
        "Cookie"
    ],
    "backend": [
        {
            "url_pattern": "/__debug/cookie"
        }
    ],
    "extra_config": {
        "security/policies": {
            "req": {
                "policies": [
                    "getCookie('GDPR') == 'yes'"
                ],
                "error": {
                    "body": "User did not accept the cookie and tracking is not allowed",
                    "status": 403
                }
            }
        }
    }
},
{
    "@comment": "Feature: Authorization based on JWT (using KrakenD JOSE signer)",
    "endpoint": "/private/custom",
    "backend": [
        {
            "host": ["http://fake_api"],
            "url_pattern": "/user/1.json"
        }
    ],
    "extra_config": {
        "auth/validator": {
            "alg": "HS256",
            "audience": [
                "http://api.example.com"
            ],
            "roles_key": "roles",
            "issuer": "https://krakend.io",
            "roles": [
                "role_a",
                "role_c"
            ],
            "jwk_url": "{{.fake_api}}/jwk/symmetric.json",
            "disable_jwk_security": true
        }
    }
},
{
    "@comment": "Feature: JWT signing, as described at https://www.krakend.io/docs/authorization/jwt-signing/",
    "endpoint": "/token",
    "backend": [
        {
            "host": ["http://fake_api"],
            "url_pattern": "/token.json"
        }
    ],
    "extra_config": {
        "auth/signer": {
            "alg": "HS256",
            "kid": "sim2",
            "keys_to_sign": [
                "access_token",
                "refresh_token"
            ],
            "jwk_url": "{{.fake_api}}/jwk/symmetric.json",
            "disable_jwk_security": true
        }
    }
},
{
    "@comment": "EE only feature: Authorization based on API Keys",
    "endpoint": "/api-key",
    "@test_with": "curl -iG -H'Authorization: Bearer 58427514-be32-0b52-b7c6-d01fada30497' http://localhost:8080/api-key",
    "backend": [
        {
            "url_pattern": "/__debug/admin"
        }
    ],
    "extra_config": {
        "auth/api-keys": {
            "roles": [
                "admin"
            ]
        },
        "documentation/openapi": {
            "summary": "Some information behind API-Keys authentication protection",
            "description": "This endpoint uses API-Key authentication",
            "tags": [
                "Authentication"
            ]
        }
    }
},
{
    "@comment": "EE only feature: Wildcard to our fake API, protected with Basic Auth",
    "@test_with": "curl -iG 'http://admin:admin@localhost:8080/fake-api-auth/articles.json'",
    "backend": [
        {
            "host": ["http://fake_api"],
            "url_pattern": "/token.json"
        }
    ],
    "extra_config": {
        "auth/signer": {
            "alg": "HS256",
            "kid": "sim2",
            "keys_to_sign": [
                "access_token",
                "refresh_token"
            ],
            "jwk_url": "{{.fake_api}}/jwk/symmetric.json",
            "disable_jwk_security": true
        }
    }
},
{
    "@comment": "EE only feature: Authorization based on API Keys",
    "endpoint": "/api-key",
    "@test_with": "curl -iG -H'Authorization: Bearer 58427514-be32-0b52-b7c6-d01fada30497' http://localhost:8080/api-key",
    "backend": [
        {
            "url_pattern": "/__debug/admin"
        }
    ],
    "extra_config": {
        "auth/api-keys": {
            "roles": [
                "admin"
            ]
        },
        "documentation/openapi": {
            "summary": "Some information behind API-Keys authentication protection",
            "description": "This endpoint uses API-Key authentication",
            "tags": [
                "Authentication"
            ]
        }
    }
},
{
    "@comment": "EE only feature: Wildcard to our fake API, protected with Basic Auth",
    "@test_with": "curl -iG 'http://admin:admin@localhost:8080/fake-api-auth/articles.json'",
    "backend": [
        {
            "host": ["http://fake_api"],
            "url_pattern": "/"
        }
    ],
    "endpoint": "/fake-api-auth/*",
    "extra_config": {
        "@comment": "The simple inclusion of the Auth Basic component enables it for this endpoint",
        "auth/basic": {},
        "documentation/openapi": {
            "description": "This endpoint will send all requests to a designed backend including everything after the /fake-api-auth path, adding Basic Authentication",
            "summary": "Calls to internal service with wildcard, adding auth",
            "tags": [
                "Wildcard"
            ]
        }
    },
    "output_encoding": "no-op"
}
